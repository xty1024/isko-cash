
momentum = angular.module "Momentum.txncontrollers", []

momentum.controller "TxnsController", ['$scope', '$http', ($scope, $http) ->
  # We'll use $resource later.
  $http.get("/api/transaction")
  .success (response) ->
    $scope.data.messages = response
  .error (e) ->
    alert "Something went wrong."
]

momentum.controller "TxnController", ['$scope', '$location', '$http', ($scope, $location, $http) ->

  $scope.data =
    txnid: ""
    studentid: "201354321"
    vendorid: "2"
    txntype: ""
    txnitemid: ""
    txnquantity: ""
    txnunitprice: ""
    txntotalamount: ""

  $scope.itemsavailable = [
    itemid: ""
    itemname: ""
    itemdesc: ""
    itemunitprice: ""
    itemunitmeasure: ""
  ]

  $scope.itemsorder = [
    txnitemid: ""
    txnitemname: ""
    txnunitprice: ""
    txnquantity: ""
    txnunitmeasure: ""
    txntotalamount: ""
  ]

  $scope.changeTxnUnitPrice = ->
    $scope.data.txntotalamount = $scope.data.txnunitprice * $scope.data.txnquantity

  $scope.submitGetAvailableItems = ->
    $http.get("/api/transaction/#{$scope.data.vendorid}")
    .success (response) ->
      $scope.itemsavailable = response
    .error (e) ->
      alert "Something went wrong.\n" + e  

  $scope.addItemOrder = (txnitemid, txnitemname, txnunitprice, txnunitmeasure) ->
    txnquantity = prompt "Enter Quantity for '" + txnitemname + "' : "
    txntotalamount = txnquantity * txnunitprice
    $scope.itemsorder.push
      txnitemid: txnitemid
      txnitemname: txnitemname
      txnunitprice: txnunitprice
      txnquantity: txnquantity
      txnunitmeasure: txnunitmeasure
      txntotalamount: txntotalamount

  $scope.submitGetTxn = ->
    $http.get("/api/transaction/#{$scope.data.txnid}")
    .success (response) ->
      $scope.data.studentid = response
    .error (e) ->
      alert "Something went wrong. That Transaction ID may not exist.\n" + e

  $scope.submitPostTxn = ->
    submitTxn = confirm "Do you want to submit the transaction?"
    orderListEmpty = !!$scope.itemsorder    
    if submitTxn
      # For RELOAD (Using Consumer Module Only)
      if orderListEmpty
        alert "List empty."
        $http.post("/api/transaction",
          studentid: $scope.data.studentid
          vendorid: $scope.data.vendorid
          txntype: $scope.data.txntype
          txnitemid: itemorder.txnitemid
          txnquantity: itemorder.txnquantity
          txnunitprice: itemorder.txnunitprice
          txntotalamount: itemorder.txntotalamount
        ).success (response) ->
          if response.length > 20      
            alert "Cannot complete reload. \n" + response
          else
            alert "Successfully completed reload! \n" + $scope.data.studentid + " remaining balance is now: Php " + response
            $location.path("/home").replace()
      else
        alert "List not empty."
        $scope.itemsorder.forEach (itemorder) ->
          if itemorder.txnitemid > 0
            $http.post("/api/transaction",
              studentid: $scope.data.studentid
              vendorid: $scope.data.vendorid
              txntype: $scope.data.txntype
              txnitemid: itemorder.txnitemid
              txnquantity: itemorder.txnquantity
              txnunitprice: itemorder.txnunitprice
              txntotalamount: itemorder.txntotalamount
            ).success (response) ->
              if response.length > 20      
                alert "Cannot complete transaction. \n" + response
              else
                alert "Successfully completed transaction! \n" + $scope.data.studentid + " remaining balance is now: Php " + response
                $location.path("/home").replace()
    else
      alert "Did not submit transaction."

  $scope.submitPutTxn = ->
    $http.put("/api/reload/#{$scope.data.id}",
      message: $scope.data.message
    ).success (response) ->
      alert "Successfully updated a message!"
    .error (response) ->
      alert "Something went wrong."

  $scope.submitDeleteTxn = ->
    $http.delete("/api/reload/#{$scope.data.id}")
    .success (response) ->
      $scope.data.id = ""
      $scope.data.message = ""
      alert "Successfully deleted a message!"
    .error (response) ->
      alert "Something went wrong. That ID may not exist."
]
